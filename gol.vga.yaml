---
- call main
- exit
- label to_vi
- push bp
- cp sp bp
- sub sp 1
- sub sp 1
- sub sp 1
- set_reg_d [bp+4]
- set_reg_a [bp+2]
- cp reg_d reg_b
- mult_ab
- cp reg_a [bp-3]
- set_reg_d [bp-3]
- set_reg_a [bp+3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-1]
- set_reg_d [bp-1]
- set_reg_a [bp+5]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-2]
- cp [bp-2] reg_a
- cp bp sp
- pop bp
- ret
- label vram_get_v2
- push bp
- cp sp bp
- _debug ---->>_vram_get_v2
- sub sp 1
- sub sp 1
- _debug ---->>_vram_get_v2_>_adjust_x
- _debug -->>_case
- label test_1_0
- set_reg_d [bp+4]
- set_reg_a 0
- cp reg_d reg_b
- compare_v2
- jump_below then_2
- set_reg_a 0
- jump end_lt_2
- label then_2
- set_reg_a 1
- label end_lt_2
- set_reg_b 1
- compare_v2
- jump_eq when_1_0
- jump test_1_1
- label test_1_1
- set_reg_d [bp+4]
- set_reg_a 4
- cp reg_d reg_b
- compare_v2
- jump_above then_3
- set_reg_a 0
- jump end_gt_3
- label then_3
- set_reg_a 1
- label end_gt_3
- set_reg_b 1
- compare_v2
- jump_eq when_1_1
- jump test_1_2
- label test_1_2
- set_reg_d 1
- set_reg_a 1
- cp reg_d reg_b
- compare_v2
- jump_eq then_4
- set_reg_a 0
- jump end_eq_4
- label then_4
- set_reg_a 1
- label end_eq_4
- set_reg_b 1
- compare_v2
- jump_eq when_1_2
- jump end_case_1
- label when_1_0
- _debug ---->>_x-1
- cp 4 [bp-1]
- jump end_case_1
- label when_1_1
- _debug ---->>_x-2
- cp 0 [bp-1]
- jump end_case_1
- label when_1_2
- _debug ---->>_x-3
- cp [bp+4] [bp-1]
- jump end_case_1
- label end_case_1
- _debug <<--_case
- _debug ---->>_vram_get_v2_>_adjust_y
- _debug -->>_case
- label test_5_0
- set_reg_d [bp+5]
- set_reg_a 0
- cp reg_d reg_b
- compare_v2
- jump_below then_6
- set_reg_a 0
- jump end_lt_6
- label then_6
- set_reg_a 1
- label end_lt_6
- set_reg_b 1
- compare_v2
- jump_eq when_5_0
- jump test_5_1
- label test_5_1
- set_reg_d [bp+5]
- set_reg_a 4
- cp reg_d reg_b
- compare_v2
- jump_above then_7
- set_reg_a 0
- jump end_gt_7
- label then_7
- set_reg_a 1
- label end_gt_7
- set_reg_b 1
- compare_v2
- jump_eq when_5_1
- jump test_5_2
- label test_5_2
- set_reg_d 1
- set_reg_a 1
- cp reg_d reg_b
- compare_v2
- jump_eq then_8
- set_reg_a 0
- jump end_eq_8
- label then_8
- set_reg_a 1
- label end_eq_8
- set_reg_b 1
- compare_v2
- jump_eq when_5_2
- jump end_case_5
- label when_5_0
- _debug ---->>_y-1
- cp 4 [bp-2]
- jump end_case_5
- label when_5_1
- _debug ---->>_y-2
- cp 0 [bp-2]
- jump end_case_5
- label when_5_2
- _debug ---->>_y-3
- cp [bp+5] [bp-2]
- jump end_case_5
- label end_case_5
- _debug <<--_case
- _debug ---->>_vram_get_v2_>_ax,_ay_を確認
- sub sp 1
- _debug -->>_call_set_to_vi
- push 0
- push [bp-2]
- push [bp-1]
- push [bp+2]
- call to_vi
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_to_vi
- get_vram [bp-3] reg_a
- cp bp sp
- pop bp
- ret
- label arr_set_buf
- push bp
- cp sp bp
- sub sp 1
- _debug -->>_call_set_to_vi
- push 25
- push [bp+4]
- push [bp+3]
- push [bp+2]
- call to_vi
- add sp 4
- cp reg_a [bp-1]
- _debug <<--_call_set_to_vi
- set_vram [bp-1] [bp+5]
- cp bp sp
- pop bp
- ret
- label arr_get_buf
- push bp
- cp sp bp
- sub sp 1
- _debug 57---------
- _debug -->>_call_set_to_vi
- push 25
- push [bp+4]
- push [bp+3]
- push [bp+2]
- call to_vi
- add sp 4
- cp reg_a [bp-1]
- _debug <<--_call_set_to_vi
- get_vram [bp-1] reg_a
- cp bp sp
- pop bp
- ret
- label replace_with_buf_v2
- push bp
- cp sp bp
- sub sp 1
- cp 0 [bp-1]
- sub sp 1
- cp 0 [bp-2]
- sub sp 1
- _debug -->>_while
- label while_9
- set_reg_d [bp-1]
- set_reg_a 25
- cp reg_d reg_b
- compare_v2
- jump_eq then_10
- set_reg_a 1
- jump end_neq_10
- label then_10
- set_reg_a 0
- label end_neq_10
- set_reg_b 1
- compare_v2
- jump_eq true_9
- jump end_while_9
- label true_9
- _debug ____loop_ai
- set_reg_d [bp-1]
- set_reg_a 25
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-2]
- get_vram [bp-2] reg_a
- cp reg_a [bp-3]
- set_vram [bp-1] [bp-3]
- set_reg_d [bp-1]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-1]
- jump while_9
- label end_while_9
- _debug <<--_while
- cp bp sp
- pop bp
- ret
- label gen_next_step
- push bp
- cp sp bp
- sub sp 1
- sub sp 1
- sub sp 1
- sub sp 1
- cp 0 [bp-4]
- sub sp 1
- _debug -->>_call_set_vram_get_v2
- push [bp+4]
- push [bp+3]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-5]
- _debug <<--_call_set_vram_get_v2
- sub sp 1
- cp 99 [bp-6]
- _debug -->>_lt
- set_reg_d [bp+3]
- set_reg_a 1
- cp reg_a reg_c
- cp reg_d reg_a
- cp reg_c reg_b
- sub_ab
- cp reg_a [bp-1]
- set_reg_d [bp+4]
- set_reg_a 1
- cp reg_a reg_c
- cp reg_d reg_a
- cp reg_c reg_b
- sub_ab
- cp reg_a [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_lt
- _debug -->>_t
- cp [bp+3] [bp-1]
- set_reg_d [bp+4]
- set_reg_a 1
- cp reg_a reg_c
- cp reg_d reg_a
- cp reg_c reg_b
- sub_ab
- cp reg_a [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_t
- _debug -->>_rt
- set_reg_d [bp+3]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-1]
- set_reg_d [bp+4]
- set_reg_a 1
- cp reg_a reg_c
- cp reg_d reg_a
- cp reg_c reg_b
- sub_ab
- cp reg_a [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_rt
- _debug -->>_l
- set_reg_d [bp+3]
- set_reg_a 1
- cp reg_a reg_c
- cp reg_d reg_a
- cp reg_c reg_b
- sub_ab
- cp reg_a [bp-1]
- cp [bp+4] [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_l
- _debug -->>_r
- set_reg_d [bp+3]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-1]
- cp [bp+4] [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_r
- _debug -->>_lb
- set_reg_d [bp+3]
- set_reg_a 1
- cp reg_a reg_c
- cp reg_d reg_a
- cp reg_c reg_b
- sub_ab
- cp reg_a [bp-1]
- set_reg_d [bp+4]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_lb
- _debug -->>_b
- cp [bp+3] [bp-1]
- set_reg_d [bp+4]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_b
- _debug -->>_rb
- set_reg_d [bp+3]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-1]
- set_reg_d [bp+4]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-2]
- _debug -->>_call_set_vram_get_v2
- push [bp-2]
- push [bp-1]
- push 5
- push 5
- call vram_get_v2
- add sp 4
- cp reg_a [bp-3]
- _debug <<--_call_set_vram_get_v2
- set_reg_d [bp-4]
- set_reg_a [bp-3]
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- _debug <<--_rb
- _debug -->>_case
- label test_11_0
- set_reg_d [bp-5]
- set_reg_a 1
- cp reg_d reg_b
- compare_v2
- jump_eq then_12
- set_reg_a 0
- jump end_eq_12
- label then_12
- set_reg_a 1
- label end_eq_12
- set_reg_b 1
- compare_v2
- jump_eq when_11_0
- jump end_case_11
- label when_11_0
- set_reg_d [bp-4]
- set_reg_a 10
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-4]
- jump end_case_11
- label end_case_11
- _debug <<--_case
- _debug @@@@_num_alive_を確認
- _debug -->>_case
- label test_13_0
- set_reg_d [bp-4]
- set_reg_a 3
- cp reg_d reg_b
- compare_v2
- jump_eq then_14
- set_reg_a 0
- jump end_eq_14
- label then_14
- set_reg_a 1
- label end_eq_14
- set_reg_b 1
- compare_v2
- jump_eq when_13_0
- jump test_13_1
- label test_13_1
- set_reg_d [bp-4]
- set_reg_a 12
- cp reg_d reg_b
- compare_v2
- jump_eq then_15
- set_reg_a 0
- jump end_eq_15
- label then_15
- set_reg_a 1
- label end_eq_15
- set_reg_b 1
- compare_v2
- jump_eq when_13_1
- jump test_13_2
- label test_13_2
- set_reg_d [bp-4]
- set_reg_a 13
- cp reg_d reg_b
- compare_v2
- jump_eq then_16
- set_reg_a 0
- jump end_eq_16
- label then_16
- set_reg_a 1
- label end_eq_16
- set_reg_b 1
- compare_v2
- jump_eq when_13_2
- jump test_13_3
- label test_13_3
- set_reg_d 1
- set_reg_a 1
- cp reg_d reg_b
- compare_v2
- jump_eq then_17
- set_reg_a 0
- jump end_eq_17
- label then_17
- set_reg_a 1
- label end_eq_17
- set_reg_b 1
- compare_v2
- jump_eq when_13_3
- jump end_case_13
- label when_13_0
- cp 1 [bp-6]
- jump end_case_13
- label when_13_1
- cp 1 [bp-6]
- jump end_case_13
- label when_13_2
- cp 1 [bp-6]
- jump end_case_13
- label when_13_3
- cp 0 [bp-6]
- jump end_case_13
- label end_case_13
- _debug <<--_case
- _debug @@@@_next_val_を確認
- _debug -->>_call_arr_set_buf
- push [bp-6]
- push [bp+4]
- push [bp+3]
- push [bp+2]
- call arr_set_buf
- add sp 4
- _debug <<--_call_arr_set_buf
- cp bp sp
- pop bp
- ret
- label gen_next_step_loop
- push bp
- cp sp bp
- sub sp 1
- sub sp 1
- cp 0 [bp-1]
- cp 0 [bp-2]
- _debug -->>_while
- label while_18
- set_reg_d [bp-2]
- set_reg_a 5
- cp reg_d reg_b
- compare_v2
- jump_eq then_19
- set_reg_a 1
- jump end_neq_19
- label then_19
- set_reg_a 0
- label end_neq_19
- set_reg_b 1
- compare_v2
- jump_eq true_18
- jump end_while_18
- label true_18
- cp 0 [bp-1]
- _debug -->>_while
- label while_20
- set_reg_d [bp-1]
- set_reg_a 5
- cp reg_d reg_b
- compare_v2
- jump_eq then_21
- set_reg_a 1
- jump end_neq_21
- label then_21
- set_reg_a 0
- label end_neq_21
- set_reg_b 1
- compare_v2
- jump_eq true_20
- jump end_while_20
- label true_20
- _debug -->>_call_gen_next_step
- push [bp-2]
- push [bp-1]
- push [bp+2]
- call gen_next_step
- add sp 3
- _debug <<--_call_gen_next_step
- set_reg_d [bp-1]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-1]
- jump while_20
- label end_while_20
- _debug <<--_while
- set_reg_d [bp-2]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-2]
- jump while_18
- label end_while_18
- _debug <<--_while
- cp bp sp
- pop bp
- ret
- label main
- push bp
- cp sp bp
- _debug start_----
- sub sp 1
- cp 5 [bp-1]
- sub sp 1
- cp 5 [bp-2]
- cp 1 vram[1]
- cp 1 vram[7]
- cp 1 vram[10]
- cp 1 vram[11]
- cp 1 vram[12]
- sub sp 1
- _debug -->>_while
- label while_22
- set_reg_d 1
- set_reg_a 1
- cp reg_d reg_b
- compare_v2
- jump_eq then_23
- set_reg_a 0
- jump end_eq_23
- label then_23
- set_reg_a 1
- label end_eq_23
- set_reg_b 1
- compare_v2
- jump_eq true_22
- jump end_while_22
- label true_22
- set_reg_d [bp-3]
- set_reg_a 1
- cp reg_d reg_b
- add_ab_v2
- cp reg_a [bp-3]
- _debug -->>_call_gen_next_step_loop
- push [bp-1]
- call gen_next_step_loop
- add sp 1
- _debug <<--_call_gen_next_step_loop
- _debug -->>_call_replace_with_buf_v2
- call replace_with_buf_v2
- add sp 0
- _debug <<--_call_replace_with_buf_v2
- jump while_22
- label end_while_22
- _debug <<--_while
- cp bp sp
- pop bp
- ret
